*> 
-------------------------------------------------------------
CASE STUDY - GROUP 2 -REGION AVERAGE 
-------------------------------------------------------------
NOTES: 
 Code's Updates: [12-28-24, 12:25 PM] 

FEATURES ADDED / CHANGES DONE:
DECEMBER 28: Flexible sales and region.

*>


IDENTIFICATION DIVISION.
PROGRAM-ID. SALES-REPORT.
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
SELECT OUTFILE ASSIGN TO "REGION.DAT".

DATA DIVISION.
FILE SECTION.
FD OUTFILE
   LABEL RECORDS ARE STANDARD
   DATA RECORD IS REGION-REC.
01 REGION-REC PIC X(80).

WORKING-STORAGE SECTION.
01 MAX-REGIONS PIC 9(3) VALUE 100. *> Maximum regions allowed
01 MAX-SALESMEN PIC 9(3) VALUE 100. *> Maximum salesmen allowed
01 NUM-REGIONS PIC 9(3) VALUE ZEROS. *> Actual number of regions
01 NUM-SALESMEN PIC 9(3) VALUE ZEROS. *> Actual number of salesmen
01 REGION-CODES. *>Region array
   02 REGION-CODE OCCURS 1 TO MAX-REGIONS TIMES PIC 9 VALUE ZEROS
      DEPENDING ON NUM-REGIONS.
01 SALES. *> Two dimensional array where the sales per region will be stored 
   02 SALESMAN OCCURS 1 TO MAX-REGIONS TIMES
      03 SALESMAN-AMOUNT OCCURS 1 TO MAX-SALESMEN TIMES PIC 9(5)V99 VALUE ZEROS
      DEPENDING ON NUM-SALESMEN. 
01 TOTAL-SALES OCCURS 1 TO MAX-REGIONS TIMES PIC 9(6)V99 VALUE ZEROS
   DEPENDING ON NUM-REGIONS. *> Where the total sales will be stored.
01 AVERAGE-SALES OCCURS 1 TO MAX-REGIONS TIMES PIC 9(6)V99 VALUE ZEROS
   DEPENDING ON NUM-REGIONS.  *> Where the average sales will be stored.
01 I PIC 9 VALUE ZEROS.
01 J PIC 9 VALUE ZEROS.
01 TEMP-TOTAL PIC 9(7)V99 VALUE ZEROS. *> Temporary variables for calculations
01 TEMP-AVERAGE PIC 9(6)V99 VALUE ZEROS. *> Temporary variables for calculations
01 LINE-COUNTER PIC 9(3) VALUE ZEROS. *> For formatting lines
*> Headings
01 HDG-1 PIC X(80) VALUE
   "REGION CODE     SALESMAN 1    SALESMAN 2    ...    TOTAL".
01 HDG-2 PIC X(80) VALUE
   "REGION CODE     AVERAGE SALES PER REGION".

PROCEDURE DIVISION.
*> Main Routine
MAIN-RTN.
   DISPLAY "ENTER NUMBER OF REGIONS: "
   ACCEPT NUM-REGIONS
   IF NUM-REGIONS > MAX-REGIONS *> Validates that number won't exceed MAX-REGIONS
       DISPLAY "ERROR: MAXIMUM REGIONS ALLOWED IS " MAX-REGIONS
       STOP RUN.

   DISPLAY "ENTER NUMBER OF SALESMEN PER REGION: "
   ACCEPT NUM-SALESMEN
   IF NUM-SALESMEN > MAX-SALESMEN *> Validates that number won't exceed MAX-SALESMEN
       DISPLAY "ERROR: MAXIMUM SALESMEN ALLOWED IS " MAX-SALESMEN
       STOP RUN.

   DISPLAY "ENTER SALES DATA FOR " NUM-REGIONS " REGIONS."
   PERFORM INPUT-RTN
   PERFORM CALCULATE-TOTALS-RTN
   PERFORM OUTPUT-RTN
   STOP RUN.

*> User inputs
INPUT-RTN.
*> Loops through regions and salesmen to accept sales data
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      DISPLAY "ENTER SALES FOR REGION " I ":"
      PERFORM VARYING J FROM 1 BY 1 UNTIL J > NUM-SALESMEN
         DISPLAY "  SALESMAN " J ": "
         ACCEPT SALESMAN-AMOUNT(I, J)
      END-PERFORM
   END-PERFORM.

*> Calculation of the total and average sales
CALCULATE-TOTALS-RTN.
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      COMPUTE TEMP-TOTAL = 0
      PERFORM VARYING J FROM 1 BY 1 UNTIL J > NUM-SALESMEN
         ADD SALESMAN-AMOUNT(I, J) TO TEMP-TOTAL
      END-PERFORM
      MOVE TEMP-TOTAL TO TOTAL-SALES(I)
      COMPUTE TEMP-AVERAGE = TEMP-TOTAL / NUM-SALESMEN
      MOVE TEMP-AVERAGE TO AVERAGE-SALES(I)
   END-PERFORM.

OUTPUT-RTN.
   DISPLAY HDG-1
*> Display the inputted regions and sales men by the user, and the total
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      DISPLAY REGION-CODE(I) "          "
      PERFORM VARYING J FROM 1 BY 1 UNTIL J > NUM-SALESMEN
         DISPLAY SALESMAN-AMOUNT(I, J) "          "
      END-PERFORM
      DISPLAY TOTAL-SALES(I)
   END-PERFORM.

   DISPLAY "\n" HDG-2
*> Display the average sales per region
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      DISPLAY REGION-CODE(I) "          " AVERAGE-SALES(I)
   END-PERFORM.

*> Writes data to the output file
   WRITE REGION-REC FROM HDG-1.
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      MOVE REGION-CODE(I) TO REGION-REC(1:10)
      PERFORM VARYING J FROM 1 BY 1 UNTIL J > NUM-SALESMEN
         MOVE SALESMAN-AMOUNT(I, J) TO REGION-REC((J - 1) * 10 + 15:10)
      END-PERFORM
      MOVE TOTAL-SALES(I) TO REGION-REC(45:10)
      WRITE REGION-REC
   END-PERFORM.

   WRITE REGION-REC FROM HDG-2.
   PERFORM VARYING I FROM 1 BY 1 UNTIL I > NUM-REGIONS
      MOVE REGION-CODE(I) TO REGION-REC(1:10)
      MOVE AVERAGE-SALES(I) TO REGION-REC(15:10)
      WRITE REGION-REC
   END-PERFORM.

   CLOSE OUTFILE.
